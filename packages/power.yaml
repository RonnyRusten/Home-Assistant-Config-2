automation:
  - id: "check_power_consumption"
    alias: _Check power consumption
    description: "Runs every 10 minutes, runs script to check power consumption"
    trigger:
      - platform: time_pattern
        minutes: /10
      - platform: numeric_state
        entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
        above: "9.5"
        for:
          hours: 0
          minutes: 0
          seconds: 30
      - platform: numeric_state
        entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
        below: "9.5"
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition: []
    action:
      - service: script.power_control
    mode: single

script:
  power_control:
    alias: Control power consumption
    icon: mdi:flash
    description: "Turn on and of utilities to control power consumption"
    mode: restart
    variables:
      power_limit: 9.95
    sequence:
      - choose:
          - conditions:
            - condition: numeric_state
              entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
              above: "9.5"
            - condition: state
              entity_id: climate.basement_hall_floor_heating
              state: 24
              attribute: temperature
            sequence:
              - service: climate.set_temperature
                target:
                  entity_id: climate.basement_hall_floor_heating
                data:
                  temperature: 20              

          - conditions:
            - condition: numeric_state
              entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
              above: "9.5"              
            - condition: state
              entity_id: climate.basement_hall_floor_heating
              state: 20
              attribute: temperature
            - condition: state
              entity_id: climate.bathroom_basement_temperature
              state: 27
              attribute: temperature
            sequence:    
              - service: climate.set_temperature
                target:
                  entity_id: climate.bathroom_basement_temperature
                data:
                  temperature: 20

          - conditions:
            - condition: numeric_state
              entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
              above: "9.5"
            - condition: state
              entity_id: climate.basement_hall_floor_heating
              state: 20
              attribute: temperature
            - condition: state
              entity_id: climate.bathroom_basement_temperature
              state: 20
              attribute: temperature
            - condition: state
              entity_id: switch.hot_water_plug
              state: "on"
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.hot_water_plug

          - conditions:
            - condition: numeric_state
              entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
              below: "9.5"
            - condition: state
              entity_id: climate.basement_hall_floor_heating
              state: 20
              attribute: temperature
            - condition: state
              entity_id: climate.bathroom_basement_temperature
              state: 20
              attribute: temperature
            - condition: state
              entity_id: switch.hot_water_plug
              state: "off"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.hot_water_plug

          - conditions:
            - condition: numeric_state
              entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
              below: "9.5"
            - condition: state
              entity_id: climate.basement_hall_floor_heating
              state: 20
              attribute: temperature
            - condition: state
              entity_id: climate.bathroom_basement_temperature
              state: 20
              attribute: temperature
            sequence:              
              - service: climate.set_temperature
                target:
                  entity_id: climate.bathroom_basement_temperature
                data:
                  temperature: 27

          - conditions:
            - condition: numeric_state
              entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
              below: "9.5"
            - condition: state
              entity_id: climate.basement_hall_floor_heating
              state: 20
              attribute: temperature
            sequence:
              - service: climate.set_temperature
                target:
                  entity_id: climate.basement_hall_floor_heating
                data:
                  temperature: 24

        default: []

              # - service: climate.set_preset_mode
              #   target:
              #     entity_id: climate.bedroom_ingeborg_temperature
              #   data:
              #     preset_mode: away
              # - service: climate.set_preset_mode
              #   target:
              #     entity_id: climate.bedroom_marius_temperature
              #   data:
              #     preset_mode: away

              # - service: climate.set_preset_mode
              #   target:
              #     entity_id: climate.bedroom_ingeborg_temperature
              #   data:
              #     preset_mode: none
              # - service: climate.set_preset_mode
              #   target:
              #     entity_id: climate.bedroom_marius_temperature
              #   data:
              #     preset_mode: none

sensor:
  - platform: integration
    source: sensor.han_port_power_corrected
    name: energy_total
    unique_id: energy_total
    round: 2
    method: left
    unit_prefix: k

  - platform: filter
    name: "Power Average 10 minutes"
    entity_id: sensor.energy_total
    filters:
      - filter: time_simple_moving_average
        window_size: "00:10"
  
  - platform: statistics
    name: power_usage_last_quarter
    unique_id: power_usage_last_quarter
    entity_id: sensor.energy_total
    state_characteristic: change
    max_age:
      minutes: 15
    sampling_size: 15000

  - platform: statistics
    name: power_usage_last_10
    unique_id: power_usage_last_10
    entity_id: sensor.energy_total
    state_characteristic: change
    max_age:
      minutes: 10
    sampling_size: 10000

template:
  - sensor:
      # - name: StrÃ¸m billig segment
      #   unique_id: power_cheap_period
      #   state: >-
      #     {% set intervall_1=state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'raw_today')[0:8] | sort(attribute='value') %}
      #     {% set intervall_2=state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'raw_today')[8:16] | sort(attribute='value') %}
      #     {% set intervall_3=state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'raw_today')[16:24] | sort(attribute='value') %}
      #     {{ (now() >= intervall_1[0].start and now() <= intervall_1[0].end)
      #     or (now() >= intervall_1[1].start and now() <= intervall_1[1].end)
      #     or (now() >= intervall_2[0].start and now() <= intervall_2[0].end)
      #     or (now() >= intervall_2[1].start and now() <= intervall_2[1].end)
      #     or (now() >= intervall_3[0].start and now() <= intervall_3[0].end)
      #     or (now() >= intervall_3[1].start and now() <= intervall_3[1].end) }}

      - name: han_port_power_corrected
        unique_id: han_port_power_corrected
        device_class: power
        state: >-
          {% if states('sensor.han_port_power') | float(0) < 0 %}
            0
          {% else %}
            {{(states('sensor.han_port_power') | float(0) / 1) | round(2) }}
          {% endif %}
        unit_of_measurement: W

      - name: electricity_cost_nordpool
        unique_id: electricity_cost
        state: "{{ states('sensor.nordpool_kwh_molde_nok_3_10_025') | float(0)  * states('sensor.consumption_current_hour')|float(0) }}"
        unit_of_measurement: NOK

      - name: electricity_total_price_deal
        unique_id: electricity_total_price_deal
        state: "{{ states('sensor.nordpool_kwh_molde_nok_3_10_025') | float(0)  +  0.045 }}"
        unit_of_measurement: Nok/kWh

      - name: electricity_total_price
        unique_id: electricity_total_price
        state: "{{ states('sensor.electricity_total_price_deal') | float(0)  +  (states('sensor.electricity_energy_cost') | float(0) + (19.26 | float(0)) / 100) }}"
        unit_of_measurement: NOK/kWh

      - name: monthly_energy_cost_nok
        unique_id: monthly_energy_cost_nok
        device_class: monetary
        state: "{{ states('sensor.monthly_energy_cost') | float(0) | round(2) }}"
        unit_of_measurement: NOK

      - name: power_usage_current_hour_estimated_from_last_10_min
        unique_id: power_usage_current_hour_estimated_from_last_10_min
        device_class: power
        state: >-
          {{ ((states('sensor.power_usage_last_10')) | float(0) / 10 
          * (60 - ((as_timestamp(states('sensor.date_time_iso'),0) | timestamp_custom('%M')) | float(0)))
          + states('sensor.consumption_current_hour') | float(0)) | round(2) }}
        unit_of_measurement: kWh

      - name: power_usage_current_hour_estimated_from_last_15_min
        unique_id: power_usage_current_hour_estimated_from_last_15_min
        device_class: power
        state: >-
          {{ ((states('sensor.power_usage_last_quarter')) | float(0) / 15 
          * (60 - ((as_timestamp(states('sensor.date_time_iso'),0) | timestamp_custom('%M')) | float(0)))
          + states('sensor.consumption_current_hour') | float(0)) | round(2) }}
        unit_of_measurement: kWh

      - name: nordpool_current_price
        unique_id: nordpool_current_price
        state: "{{ state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'current_price') }}"
        unit_of_measurement: NOK/kWh

      - name: nordpool_average_price
        unique_id: nordpool_average_price
        state: "{{ state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'average') }}"
        unit_of_measurement: NOK/kWh

      - name: nordpool_price_low
        unique_id: nordpool_price_low
        state: "{{ state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'low price') }}"

      - name: nordpool_price_high
        unique_id: nordpool_price_high
        state: "{{ (states('sensor.nordpool_kwh_molde_nok_3_10_025') | float(0)) >= (state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'average') | float(0) * (1 + states('input_number.nordpool_over_avg_acceptance') | float(0) /100)) }}"

      - name: electricity_energy_cost
        unique_id: electricity_energy_cost
        state: >-
          {% if (now().hour | float > 6  and now().hour | float < 22) %}
          0.2125
          {% else %}
          0.1375
          {% endif %}
        unit_of_measurement: NOK/kWh

utility_meter:
  total_hourly_energy:
    source: sensor.energy_total
    name: consumption current hour
    unique_id: total_hourly_energy
    cycle: hourly

  total_daily_energy:
    source: sensor.energy_total
    name: Totalt daglig
    unique_id: total_daily_energy
    cycle: daily

  total_weekly_energy:
    source: sensor.energy_total
    name: Totalt ukentlig
    unique_id: total_weekly_energy
    cycle: weekly

  total_monthly_energy:
    source: sensor.energy_total
    name: Totalt mÃ¥nedlig
    unique_id: total_monthly_energy
    cycle: monthly

  total_yearly_energy:
    source: sensor.energy_total
    name: Totalt Ã¥rlig
    unique_id: total_yearly_energy
    cycle: yearly

  monthly_energy_cost:
    source: sensor.energy_total_cost
    name: monthly_energy_cost
    unique_id: monthly_energy_cost
    cycle: monthly

  total_hourly_cost_nordpool:
    source: sensor.electricity_cost_nordpool
    name: consumption current hour Nordpool
    unique_id: total_hourly_cost_nordpool
    cycle: hourly

  total_daily_cost_nordpool:
    source: sensor.electricity_cost_nordpool
    name: Totalt daglig Nordpool
    unique_id: total_daily_cost_nordpool
    cycle: daily

  total_monthly_cost_nordpool:
    source: sensor.electricity_cost_nordpool
    name: Totalt mÃ¥nedlig Nordpool
    unique_id: total_monthly_cost_nordpool
    cycle: monthly


rest:
  - scan_interval: 43200
    resource: https://raw.githubusercontent.com/martinju/stromstotte/master/data/current_estimated_compensation.json
    sensor:
      - name: "Estimated power payback 2,5%"
        json_attributes_path: "$.19"
        value_template: "{{ value_json.48.compensation | round (2)}}"
        unit_of_measurement: "NOK/kWh"
        json_attributes:
        - "estimation_date"
        - "computation_year"
        - "computation_month"
      - name: "Estimated power payback 97,5%"
        json_attributes_path: "$.26"
        value_template: "{{ value_json.26.compensation | round (2)}}"
        unit_of_measurement: "NOK/kWh"
        json_attributes:
        - "estimation_date"
        - "computation_year"
        - "computation_month"
      - name: "Estimated power average price"
        json_attributes_path: "$.16"
        value_template: "{{ value_json.16.mean_price | round (2)}}"
        unit_of_measurement: "NOK/kWh"
        json_attributes:
        - "estimation_date"
        - "computation_year"
        - "computation_month"
      - name: "Estimated power average price 2,5%"
        json_attributes_path: "$.19"
        value_template: "{{ value_json.19.mean_price | round (2)}}"
        unit_of_measurement: "NOK/kWh"
        json_attributes:
        - "estimation_date"
        - "computation_year"
        - "computation_month"
      - name: "Estimated power average price 97,5%"
        json_attributes_path: "$.26"
        value_template: "{{ value_json.26.mean_price | round (2)}}"
        unit_of_measurement: "NOK/kWh"
        json_attributes:
        - "estimation_date"
        - "computation_year"
        - "computation_month"
      - name: "Estimated power payback 95%s"
        json_attributes_path: "$.25"
        value_template: "{{ value_json.25.compensation |float }}"
        unit_of_measurement: "NOK/kWh"
        json_attributes:
        - "estimation_date"
        - "computation_year"
        - "computation_month"