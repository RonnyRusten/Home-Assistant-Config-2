esphome:
  name: greenhouse
  friendly_name: greenhouse
  on_boot:
    - priority: 200
      then:
        - lambda: |-        
            delay(500);
    - priority: -100
      then:
        - component.update: dallas_temp
        - component.update: battery_voltage

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "ovMCgvBO9b0+13xy5p6Wm9WWo023N1/rNEoD8538wvQ="

ota:
  password: "d6bf3e5da3c42eb8098632b35ed3f9f9"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Greenhouse Fallback Hotspot"
    password: "uqp6d5cOKPiP"

captive_portal:
    
dallas:
  - pin: GPIO14
    update_interval: 30s
    id: dallas_temp

binary_sensor:
  - platform: homeassistant
    name: "Greenhouse Deep Sleep"
    entity_id: input_boolean.greenhouse_deep_sleep
    id: greenhouse_deep_sleep
    publish_initial_state: true
    on_state:
      then:
        - lambda: !lambda |-
            if(x){
              id(deep_sleep_1).set_sleep_duration(270000);
              id(deep_sleep_1).begin_sleep(true);
            } else {
              id(deep_sleep_1).prevent_deep_sleep();
            }

sensor:
  - platform: adc
    pin: VCC
    name: "battery"
    id: battery_voltage
    # force_update: true
    accuracy_decimals: 2  
    
  - platform: dallas
    name: "temperature"
    address: "0xc70319a2792fe328"
    force_update: true
    accuracy_decimals: 2
    resolution: 12
    filters:
    - offset: 0.3
    
  - platform: dallas
    name: "outdoor_temperature"
    address: "0x890316a279018928"
    # force_update: true
    accuracy_decimals: 2
    resolution: 12
    filters:
    - offset: 0.5

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address
    ssid:
      name: Connected SSID
    mac_address:
      name: Mac Wifi Address
    scan_results:
      name: Latest Scan Results

deep_sleep:
  run_duration: 60s
  id: deep_sleep_1